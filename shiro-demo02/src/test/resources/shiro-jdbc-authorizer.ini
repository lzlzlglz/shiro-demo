[main]
#自定义authorizer(登录授权方式，至少一个，全部成功，)
authorizer=org.apache.shiro.authz.ModularRealmAuthorizer

#(权限验证方式，shiro自带的通配符权限[system:user:create,update,delete,view])
#permissionResolver=org.apache.shiro.authz.permission.WildcardPermissionResolver

#自定义permissionResolver(自定义的二进制权限信息)
permissionResolver=com.github.chenlz.permission.BitAndWildPermissionResolver
authorizer.permissionResolver=$permissionResolver

#自定义rolePermissionResolver(角色验证方式，shiro暴露的接口，自己未实现)
rolePermissionResolver=com.github.chenlz.permission.MyRolePermissionResolver
authorizer.rolePermissionResolver=$rolePermissionResolver

securityManager.authorizer=$authorizer

#自定义realm 一定要放在securityManager.authorizer赋值之后（因为调用setRealms会将realms设置给authorizer，并给各个Realm设置permissionResolver和rolePermissionResolver）
jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
dataSource=com.alibaba.druid.pool.DruidDataSource
dataSource.driverClassName=com.mysql.jdbc.Driver
dataSource.url=jdbc:mysql://localhost:3306/shiro
dataSource.username=root
dataSource.password=root
jdbcRealm.dataSource=$dataSource
jdbcRealm.permissionsLookupEnabled=true
securityManager.realms=$jdbcRealm
